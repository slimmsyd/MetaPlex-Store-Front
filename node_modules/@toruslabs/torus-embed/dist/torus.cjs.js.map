{"version":3,"sources":["webpack://Torus/webpack/bootstrap","webpack://Torus/external \"@babel/runtime/helpers/defineProperty\"","webpack://Torus/external \"@babel/runtime/helpers/assertThisInitialized\"","webpack://Torus/external \"@babel/runtime/regenerator\"","webpack://Torus/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://Torus/external \"@toruslabs/openlogin-jrpc\"","webpack://Torus/external \"@babel/runtime/helpers/getPrototypeOf\"","webpack://Torus/external \"eth-rpc-errors\"","webpack://Torus/external \"@babel/runtime/helpers/classCallCheck\"","webpack://Torus/external \"@babel/runtime/helpers/createClass\"","webpack://Torus/external \"@babel/runtime/helpers/get\"","webpack://Torus/external \"@toruslabs/http-helpers\"","webpack://Torus/external \"@babel/runtime/helpers/inherits\"","webpack://Torus/external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://Torus/external \"@babel/runtime/helpers/typeof\"","webpack://Torus/external \"pump\"","webpack://Torus/external \"@toruslabs/torus.js\"","webpack://Torus/external \"@metamask/obs-store\"","webpack://Torus/external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://Torus/external \"@toruslabs/fetch-node-details\"","webpack://Torus/external \"lodash.merge\"","webpack://Torus/external \"fast-deep-equal\"","webpack://Torus/external \"is-stream\"","webpack://Torus/external \"loglevel\"","webpack://Torus/external \"create-hash\"","webpack://Torus/external \"events\"","webpack://Torus/./src/interfaces.ts","webpack://Torus/./src/config.ts","webpack://Torus/./src/embedUtils.ts","webpack://Torus/./src/loglevel.ts","webpack://Torus/./src/messages.ts","webpack://Torus/./src/utils.ts","webpack://Torus/./src/inpage-provider.ts","webpack://Torus/./src/integrity.ts","webpack://Torus/./src/PopupHandler.ts","webpack://Torus/./src/siteMetadata.ts","webpack://Torus/./src/embed.ts","webpack://Torus/./src/index.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrencies","includeFees","enforceMax","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","runOnLoad","fn","Promise","resolve","reject","document","body","then","catch","addEventListener","runOnComplete","retry","setInterval","readyState","clearInterval","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","on","documentReady","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","config","validatePaymentProvider","provider","params","isValid","Object","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","done","log","getRpcPromiseCallback","unwrapResult","response","Array","isArray","result","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","version","process","versionUsed","get","useAPIKey","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","defaultMaxListeners","TorusInpageProvider","connectionStream","jsonRpcStreamName","enable","experimentalMethods","send","isDuplexStream","Error","messages","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","_publicConfigStore","ObservableStore","storageKey","createStream","storeAsStream","ignoreStream","isConnected","jsonRpcConnection","createStreamMiddleware","stream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","payload","_sentWarnings","args","callback","listener","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","streamName","isEthAccounts","finalAccounts","account","dequal","hasEmittedConnection","defaults","options","algorithms","delimiter","full","hashes","internalHashes","forEach","algorithm","createHash","update","digest","sri","output","map","join","main","finalOptions","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","closed","open","href","focus","locationReplaceOnRedirect","replace","EventEmitter","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","engine","domainMetadata","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","isLocalStorageAvailable","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","preLoadIframe","Torus","buttonPosition","modalZIndex","apiKey","configuration","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","nodeDetailManager","NodeDetailManager","torusJs","TorusJs","metadataHost","allowHost","setAPIKey","alertZIndex","isIframeFullScreen","dappStorageKey","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useLocalStorage","setDefaultLevel","enableAll","disableAll","storedKey","localStorage","getItem","generatedKey","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","display","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","fetchUrl","fetch","cache","resp","headers","text","calculatedIntegrity","generateIntegrity","clearInit","verifier","ethereum","logOutStream","statusStream","statusStreamHandler","status","loggedIn","logout","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","_sendWidgetVisibilityStatus","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","walletWindow","verifierId","isExtended","getNodeDetails","nodeDetails","endpoints","torusNodeEndpoints","torusNodePubs","torusNodePub","walletVerifier","openloginVerifier","getUserTypeAndAddress","existingV1User","typeOfUser","address","v2User","newV2User","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","JSON","stringify","topupStream","topupHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","receivedId","once","theme","isDark","colors","classList","add","torusBrand1","torusGray2","logoUrl","logoLight","logoDark","torusWidgetVisibilityStream","isFull","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","loginHandler","oauthStream","_getLogoUrl","successAlert","btnContainer","bindOnLoad","children","_setEmbedWhiteLabel","attachOnLoad"],"mappings":"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","file":"torus.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@toruslabs/openlogin-jrpc\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"eth-rpc-errors\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/get\");","module.exports = require(\"@toruslabs/http-helpers\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"pump\");","module.exports = require(\"@toruslabs/torus.js\");","module.exports = require(\"@metamask/obs-store\");","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"@toruslabs/fetch-node-details\");","module.exports = require(\"lodash.merge\");","module.exports = require(\"fast-deep-equal\");","module.exports = require(\"is-stream\");","module.exports = require(\"loglevel\");","module.exports = require(\"create-hash\");","module.exports = require(\"events\");","import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport createHash from \"create-hash\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [LOGIN_PROVIDER.GOOGLE]: \"tkey-google\",\n  [LOGIN_PROVIDER.FACEBOOK]: \"tkey-facebook\",\n  [LOGIN_PROVIDER.TWITCH]: \"tkey-twitch\",\n  [LOGIN_PROVIDER.REDDIT]: \"tkey-reddit\",\n  [LOGIN_PROVIDER.DISCORD]: \"tkey-discord\",\n} as const;\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrencies: string[];\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport interface IHashAlgorithmOptions {\n  algorithms?: createHash.algorithm[];\n  delimiter?: string;\n  full?: boolean;\n}\n\nexport interface SRI {\n  hashes: Record<createHash.algorithm, string>;\n  integrity?: string;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\";\nexport type ETHEREUM_NETWORK_TYPE =\n  | \"ropsten\"\n  | \"rinkeby\"\n  | \"kovan\"\n  | \"mainnet\"\n  | \"goerli\"\n  | \"localhost\"\n  | \"matic\"\n  | \"mumbai\"\n  | \"xdai\"\n  | \"bsc_mainnet\"\n  | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Whether to check for integrity.\n   * Defaults to false\n   * @defaultValue false\n   */\n  check: boolean;\n  /**\n   * if check is true, hash must be provided. The SRI sha-384 integrity hash\n   * {@link https://www.srihash.org/ | SRI Hash}\n   */\n  hash?: string;\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * setting false, hides those verifiers from login modal\n   * @deprecated\n   * Please use loginConfig instead\n   */\n  enabledVerifiers?: VerifierStatus;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n  /**\n   * Skips TKey onboarding for new users\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  skipTKey?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SentWarningsState {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  publicConfigStore: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport interface PublicConfigState {\n  isUnlocked?: boolean;\n  selectedAddress?: string;\n  chainId?: string;\n  networkVersion?: string;\n  storageKey: string;\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, LOGIN_PROVIDER, PAYMENT_PROVIDER } from \"./interfaces\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n    includeFees: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit / Debit Card / Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n    includeFees: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: false,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n    validCryptoCurrencies: [\"ETH\", \"USDT\"],\n    includeFees: true,\n    sell: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n    includeFees: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"500€/day\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 20,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","import { Stream } from \"pump\";\n\nexport const runOnLoad = (fn: () => void): Promise<unknown> =>\n  new Promise((resolve, reject) => {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", () => {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n\nexport const runOnComplete = (fn: () => void): void => {\n  const retry = window.setInterval(() => {\n    if (window.document.readyState === \"complete\") {\n      window.clearInterval(retry);\n      fn();\n    }\n  }, 300);\n};\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close:\n        'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' +\n        \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data:\n        'Torus: The event \"data\" is deprecated and will be removed in the future.' +\n        'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged:\n        'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' +\n        ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification:\n        'Torus: The event \"notification\" is deprecated and may be removed in the future. ' +\n        'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.',\n  },\n};\n","import { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PaymentParams } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string, integrity: IntegrityParams): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { ObservableStore, storeAsStream } from \"@metamask/obs-store\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError, ethErrors } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport { isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  PublicConfigState,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  SentWarningsState,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve, reject, unwrapResult = true) =>\n  (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  _publicConfigStore: ObservableStore<PublicConfigState>;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    publicConfigStore: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({ storageKey: \"Metamask-Config\" });\n\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(\n      mux.createStream(\"publicConfig\") as unknown as Duplex,\n      storeAsStream(this._publicConfigStore),\n      // RPC requests should still work if only this stream fails\n      logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")\n    );\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore(): ObservableStore<PublicConfigState> {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: any[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({ method: methodOrPayload, params: callbackOrArgs }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import createHash from \"create-hash\";\n\nimport { IHashAlgorithmOptions, SRI } from \"./interfaces\";\n\nconst defaults = (options: IHashAlgorithmOptions) => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false,\n});\n\n// Generate list of hashes\nconst hashes = (options: IHashAlgorithmOptions, data: string): Record<createHash.algorithm, string> => {\n  const internalHashes: Record<string, string> = {};\n  options.algorithms.forEach((algorithm) => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options: IHashAlgorithmOptions, sri: SRI): string => {\n  let output = \"\";\n\n  // Hash list\n  output += Object.keys(sri.hashes)\n    .map((algorithm: createHash.algorithm) => `${algorithm}-${sri.hashes[algorithm]}`)\n    .join(options.delimiter);\n\n  return output;\n};\n\nconst main = (options: IHashAlgorithmOptions, data: string): SRI | string => {\n  // Defaults\n  const finalOptions = defaults(options);\n\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined,\n  };\n  sri.integrity = integrity(finalOptions, sri);\n\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nexport default main;\n","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","import NodeDetailManager from \"@toruslabs/fetch-node-details\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport TorusJs from \"@toruslabs/torus.js\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { documentReady, handleStream, htmlToElement, runOnLoad } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport generateIntegrity from \"./integrity\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  storageAvailable,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true,\n};\n\nconst iframeIntegrity = \"sha384-n4YBo/i0keGjOFCIdd6akNO3Hsc/Y0McDFxO36AMcSZbfe7AYtFUDQiYA17NB+Gj\";\n\nconst expectedCacheControlHeader = \"max-age=3600\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { check: false, hash: iframeIntegrity, version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  nodeDetailManager: NodeDetailManager;\n\n  torusJs: TorusJs;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  dappStorageKey: string;\n\n  paymentProviders = configuration.paymentProviders;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\",\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    // deprecated: use loginConfig instead\n    enabledVerifiers = defaultVerifiers,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\",\n    },\n    whiteLabel,\n    skipTKey = false,\n    useLocalStorage = false,\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getPreopenInstanceId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n    if (dappStorageKey) {\n      torusIframeUrl.hash = `#dappStorageKey=${dappStorageKey}`;\n    }\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n          initStream.on(\"data\", (chunk) => {\n            const { name, data, error } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n            },\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, { cache: \"reload\" });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = generateIntegrity(\n        {\n          algorithms: [\"sha384\"],\n        },\n        response\n      );\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n\n  login({ verifier = \"\" } = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (status) => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest } = {}): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (chunk) => {\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (chunk) => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        if (this.dappStorageKey) {\n          finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n        }\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails(false, true);\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, { verifier: walletVerifier, verifierId });\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      }\n      // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, { verifier: openloginVerifier, verifierId }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error?.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, { verifier: openloginVerifier, verifierId }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n      throw error;\n    }\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (chunk) => {\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (handlerChunk) => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (chunk) => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (this.dappStorageKey) {\n        // If multiple instances, it returns the first one\n        if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n        else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n      }\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (data) => {\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({ name: \"oauth\", data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId } });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        torusAlert.remove();\n\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInpageProvider } from \"./inpage-provider\";\nexport * from \"./interfaces\";\n"],"sourceRoot":""}